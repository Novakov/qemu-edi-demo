BasedOnStyle: LLVM

AccessModifierOffset: -4
AlignAfterOpenBracket: AlwaysBreak
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignEscapedNewlines: Left
AlignOperands: false
AlignTrailingComments: true
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: No
BinPackArguments: false
BinPackParameters: false

BreakBeforeBinaryOperators: false
BreakBeforeBraces: Allman
BreakBeforeInheritanceComma: true

BreakBeforeTernaryOperators: false
BreakConstructorInitializers: AfterColon
BreakInheritanceList: AfterColon
BreakStringLiterals: true
ColumnLimit: 100
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: true
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DerivePointerAlignment: false
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: false
IncludeBlocks: Preserve
IndentCaseLabels: true
IndentPPDirectives: AfterHash
IndentWidth: 4
IndentWrappedFunctionNames: true
KeepEmptyLinesAtTheStartOfBlocks: false
Language: Cpp

MaxEmptyLinesToKeep: 1
NamespaceIndentation: All
PointerAlignment: Left
ReflowComments: true
SortIncludes: true
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: Never
SpaceBeforeRangeBasedForLoopColon: false
SpaceInEmptyParentheses: false
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: false
SpacesInCStyleCastParentheses: false
SpacesInParentheses: false
SpacesInSquareBrackets : false
Standard: Cpp11
TabWidth: 4
UseTab: Never

PenaltyExcessCharacter: 2
PenaltyBreakAssignment: 0
PenaltyBreakBeforeFirstCallParameter: 0
PenaltyBreakFirstLessLess: 0
PenaltyReturnTypeOnItsOwnLine: 50

IncludeCategories:
  - Regex:           '^(<|")gtest/gtest.h'
    Priority:        10
  - Regex:           '^(<|")gtest'
    Priority:        11
  - Regex:           '^(<|")gmock/gmock.h'
    Priority:        12
  - Regex:           '^(<|")gmock'
    Priority:        13
  - Regex:           '^(<|")(cstdlib|csignal|csetjump|cstdarg|typeinfo|typeindex|type_traits|bitset|functional|utility|ctime|chrono|cstddef|initializer_list|tuple|any|optional|variant|compare|version|new|memory|scoped_allocator|memory_resource|climits|cfloat|cstdint|cinttypes|limits|exception|stdexception|cassert|system_error|cerrno|contract|cctype|cwctype|cstring|cwchar|cuchar|string|string_view|charconv|array|vector|deque|list|forward_list|set|map|unordered_set|unordered_map|stack|queue|span|algorithm|execution|iterator|cmath|complex|valarray|random|numeric|ratio|cfenv|bit|iosfwd|ios|istream|ostream|iostream|fstream|sstream|syncstream|strstream|sstream|iomanip|streambuf|cstdio|locale|clocale|codecvt|regex|atomic|thread|mutex|shared_mutex|future|condition_variable|filesystem)(>|")'
    Priority:        1
  - Regex:           '^(<|")(assert|complex|ctype|errno|inttypes|iso646|limits|locale|math|setjmp|signal|std.+|string|tgmath|threads|time|uchar|wchar|wctype).h(>|")'
    Priority:        2
  - Regex:           '^<.+>'
    Priority:        3
  - Regex:           '^".+"'
    Priority:        20 